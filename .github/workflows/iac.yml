name: IaC

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  id-token: write

jobs:

  check:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: iac/azure/level4
    steps:
      - uses: actions/checkout@v3

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          allow-no-subscriptions: false # set to true if you want to proceed without a subscription

      
      - name: Set Azure environment variables
        run: |
          echo "ARM_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
      
      - uses: hashicorp/setup-terraform@v3
      - run: terraform fmt -check 
      - run: terraform init -input=false -upgrade
      - run: terraform validate -no-color
      - run: terraform plan  -no-color -input=false
      - run: terraform apply -auto-approve -input=false -no-color

  


# TODO give access to secrets 
#  apply:
#    needs: check
#    runs-on: ubuntu-latest
#    if: github.ref == 'refs/heads/main'
#    defaults:
#      run:
#        working-directory: iac/azure/level2
#    steps:
#        - uses: actions/checkout@v3
#        - uses: hashicorp/setup-terraform@v3
#        - run: terraform apply -auto-approve
##        # TODO need to put the state somewhere
